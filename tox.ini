[tox]
envlist =
    clean,
    check,
    2.6,
    2.6-nocover,
    2.7,
    2.7-nocover,
    3.3,
    3.3-nocover,
    3.4,
    3.4-nocover,
    pypy,
    pypy-nocover,
    report,
    docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
deps =
    setuptools>=6.0
    pytest
    pytest-capturelog
    pytest-benchmark
    objproxies==0.9.3
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test -vv --ignore=src}

[testenv:spell]
setenv =
    SPELLCHECK = 1
commands =
    sphinx-build -b spelling docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
whitelist_externals =
    rm
commands =
    rm -rf dist/docs || rmdir /S /Q dist\docs
    sphinx-build -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt

[testenv:configure]
deps =
    jinja2
    matrix
usedevelop = true
commands =
    python bootstrap.py

[testenv:check]
basepython = python3.4
deps =
    docutils
    check-manifest
    flake8
    collective.checkdocs
    pygments
usedevelop = true
commands =
    python setup.py checkdocs
    python setup.py check --strict --metadata
    check-manifest {toxinidir}
    flake8 src

[testenv:coveralls]
deps =
    coveralls
usedevelop = true
commands =
    bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/wip/codecov) -vd
    bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/wip/codecov)

[testenv:extension-coveralls]
deps =
    cpp-coveralls
usedevelop = true
commands =
    bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/wip/codecov) -vd
    bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/wip/codecov)

[testenv:report]
basepython = python3.4
commands =
    coverage combine
    coverage report
usedevelop = true
deps = coverage

[testenv:clean]
commands = coverage erase
usedevelop = true
deps = coverage

[testenv:2.6]
basepython = {env:TOXPYTHON:python2.6}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test --cov=src --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:2.6-nocover]
basepython = {env:TOXPYTHON:python2.6}

[testenv:2.7]
basepython = {env:TOXPYTHON:python2.7}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test --cov=src --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov
    Django

[testenv:2.7-nocover]
basepython = {env:TOXPYTHON:python2.7}
deps =
    {[testenv]deps}
    Django

[testenv:3.3]
basepython = {env:TOXPYTHON:python3.3}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test --cov=src --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov
    Django

[testenv:3.3-nocover]
basepython = {env:TOXPYTHON:python3.3}
deps =
    {[testenv]deps}
    Django

[testenv:3.4]
basepython = {env:TOXPYTHON:python3.4}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test --cov=src --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov
    Django

[testenv:3.4-nocover]
basepython = {env:TOXPYTHON:python3.4}
deps =
    {[testenv]deps}
    Django

[testenv:pypy]
basepython = {env:TOXPYTHON:pypy}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test --cov=src --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov
    Django

[testenv:pypy-nocover]
basepython = {env:TOXPYTHON:pypy}
deps =
    {[testenv]deps}
    Django

