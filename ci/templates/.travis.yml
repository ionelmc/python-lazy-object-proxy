language: python
dist: xenial
virt: lxd
cache: false
env:
  global:
    - LD_PRELOAD=libSegFault.so
    - SEGFAULT_SIGNALS=all
    - LANG=en_US.UTF-8
    - TWINE_USERNAME=ionel
matrix:
  include:
    - python: '3.6'
      env:
        - TOXENV=check
    - python: '3.6'
      env:
        - TOXENV=docs
{%- for env in tox_environments %}{{ '' }}
{%- if 'py39' in env or 'py27' in env %}{{ '' }}
    - os: osx
      osx_image: xcode11
      language: generic
      env:
        - TOXENV={{ env }}
{%- if 'nocov' in env %}{{ '' }}
        - WHEEL_PATH=.tox/dist
{%- endif %}
{%- endif %}{{ '' }}
{%- for arch in ['arm64', 'amd64'] %}{{ '' }}
{%- if 'pypy' not in env and (arch == 'amd64' or env.startswith('py3') or 'cover' in env) %}{{ '' }}
    - env:
        - TOXENV={{ env }}{% if 'cover' in env %},codecov,extension-coveralls,coveralls{% endif %}
{%- if 'pypy' not in env and 'nocov' in env %}{{ '' }}
        - WHEEL_MANYLINUX="{% if arch == 'arm64' %}2014-arm{% else %}1{% endif %}{{ '' }} cp{{ env.split('-')[0][2:] }}"
{%- endif %}
{%- if env.startswith('pypy3') %}{{ '' }}
        - TOXPYTHON=pypy3
      python: 'pypy3'
{%- elif env.startswith('pypy') %}{{ '' }}
      python: 'pypy'
{%- else %}{{ '' }}
      python: '{{ '{0[2]}.{0[3]}'.format(env) }}'
{%- endif %}{{ '' }}
      arch: {{ arch }}
{%- endif %}{{ '' }}
{%- endfor %}{{ '' }}
{%- endfor %}{{ '' }}
before_install:
  - python --version
  - uname -a
  - lsb_release -a || true
  - |
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      brew update-reset
      [[ $TOXENV =~ py3 ]] && brew upgrade python
      [[ $TOXENV =~ py2 ]] && brew install python@2
      export PATH="/usr/local/opt/python/libexec/bin:${PATH}"
    fi
install:
  - python -mpip uninstall virtualenv --yes
  - python -mpip uninstall virtualenv --yes
  - python -mpip install --progress-bar=off --upgrade --ignore-installed -rci/requirements.txt
  - virtualenv --version
  - pip --version
  - tox --version
script:
  - |
    (
    set -eux
    if [[ -n ${WHEEL_MANYLINUX:-} ]]; then
      docker run --rm --user $UID -v $(pwd):/code ionelmc/manylinux:manylinux$WHEEL_MANYLINUX
      tox --installpkg wheelhouse/*.whl -v
      export WHEEL_PATH=wheelhouse
    else
      tox -v
    fi
    if [[ -n ${WHEEL_PATH:-} ]]; then
      twine upload --repository-url https://test.pypi.org/legacy/ --skip-existing $WHEEL_PATH/*.whl
    fi
    )
after_failure:
  - cat .tox/log/*
  - cat .tox/*/log/*
notifications:
  email:
    on_success: never
    on_failure: always
